kind: Template
apiVersion: template.openshift.io/v1
metadata:
  name: member-operator-webhook
objects:
- apiVersion: scheduling.k8s.io/v1
  kind: PriorityClass
  metadata:
    name: sandbox-users-pods
    labels:
      toolchain.dev.openshift.com/provider: codeready-toolchain
  value: -3
  globalDefault: false
  description: "Priority class for pods in users' namespaces"
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRole
  metadata:
    creationTimestamp: null
    name: webhook-role
  rules:
    - apiGroups:
        - user.openshift.io
      resources:
        - identities
        - useridentitymappings
        - users
      verbs:
        - get
        - list
        - watch
    - apiGroups:
      - "toolchain.dev.openshift.com"
      resources:
      - "spacebindingrequests"
      verbs:
      - get
      - list
      - watch
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: member-operator-webhook-sa
    namespace: ${NAMESPACE}
- apiVersion: rbac.authorization.k8s.io/v1
  kind: ClusterRoleBinding
  metadata:
    name: webhook-rolebinding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: ClusterRole
    name: webhook-role
  subjects:
    - kind: ServiceAccount
      name: member-operator-webhook-sa
      namespace: ${NAMESPACE}
- apiVersion: v1
  kind: Service
  metadata:
    name: member-operator-webhook
    namespace: ${NAMESPACE}
    labels:
      app: member-operator-webhook
      toolchain.dev.openshift.com/provider: codeready-toolchain
  spec:
    ports:
    - port: 443
      targetPort: 8443
    selector:
      app: member-operator-webhook
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: member-operator-webhook
    namespace: ${NAMESPACE}
    labels:
      app: member-operator-webhook
      toolchain.dev.openshift.com/provider: codeready-toolchain
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: member-operator-webhook
    template:
      metadata:
        name: member-operator-webhook
        labels:
          app: member-operator-webhook
      spec:
        serviceAccountName: member-operator-webhook-sa
        containers:
        - name: mutator
          image: ${IMAGE}
          command:
          - member-operator-webhook
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              cpu: 75m
              memory: 128Mi
          volumeMounts:
          - name: webhook-certs
            mountPath: /etc/webhook/certs
            readOnly: true
        volumes:
        - name: webhook-certs
          secret:
            secretName: webhook-certs
- apiVersion: admissionregistration.k8s.io/v1
  kind: MutatingWebhookConfiguration
  metadata:
    name: member-operator-webhook
    labels:
      app: member-operator-webhook
      toolchain.dev.openshift.com/provider: codeready-toolchain
  webhooks:
  - name: users.pods.webhook.sandbox
    admissionReviewVersions:
      - v1
    clientConfig:
      caBundle: ${CA_BUNDLE}
      service:
        name: member-operator-webhook
        namespace: ${NAMESPACE}
        path: "/mutate-users-pods"
        port: 443
    matchPolicy: Equivalent
    rules:
    - operations: ["CREATE"]
      apiGroups: [""]
      apiVersions: ["v1"]
      resources: ["pods"]
      scope: "Namespaced"
    sideEffects: None
    timeoutSeconds: 5
    reinvocationPolicy: Never
    failurePolicy: Ignore
    namespaceSelector:
      matchLabels:
        toolchain.dev.openshift.com/provider: codeready-toolchain
- apiVersion: admissionregistration.k8s.io/v1
  kind: ValidatingWebhookConfiguration
  metadata:
    name: member-operator-validating-webhook
    labels:
      app: member-operator-webhook
      toolchain.dev.openshift.com/provider: codeready-toolchain
  webhooks:
    - name: users.rolebindings.webhook.sandbox
      admissionReviewVersions:
        - v1
      clientConfig:
        caBundle: ${CA_BUNDLE}
        service:
          name: member-operator-webhook
          namespace: ${NAMESPACE}
          path: "/validate-users-rolebindings"
          port: 443
      matchPolicy: Equivalent
      rules:
        - operations: ["CREATE", "UPDATE"]
          apiGroups: ["rbac.authorization.k8s.io","authorization.openshift.io"]
          apiVersions: ["v1"]
          resources: ["rolebindings"]
          scope: "Namespaced"
      sideEffects: None
      timeoutSeconds: 5
      reinvocationPolicy: Never
      failurePolicy: Ignore
      namespaceSelector:
        matchLabels:
          toolchain.dev.openshift.com/provider: codeready-toolchain
    - name: users.checlusters.webhook.sandbox
      admissionReviewVersions:
        - v1
      clientConfig:
        caBundle: ${CA_BUNDLE}
        service:
          name: member-operator-webhook
          namespace: ${NAMESPACE}
          path: "/validate-users-checlusters"
          port: 443
      matchPolicy: Equivalent
      rules:
        - operations: ["CREATE"]
          apiGroups: ["org.eclipse.che"]
          apiVersions: ["v2"]
          resources: ["checlusters"]
          scope: "Namespaced"
      sideEffects: None
      timeoutSeconds: 5
      reinvocationPolicy: Never
      failurePolicy: Ignore
      namespaceSelector:
        matchLabels:
          toolchain.dev.openshift.com/provider: codeready-toolchain
    # The users.spacebindingrequests.webhook.sandbox webhook validates SpaceBindingRequest CRs,
    # Specifically it makes sure that once a SBR resource is created, the SpaceBindingRequest.Spec.MasterUserRecord field is not changed by the user.
    # The reason for making SpaceBindingRequest.Spec.MasterUserRecord field immutable is that as of now the SpaceBinding resource name is composed as follows: <Space.Name>-checksum(<Space.Name>-<MasterUserRecord.Name>),
    # thus changing it will trigger an updated of the SpaceBinding content but the name will still be based on the old MUR name.
    # The webhook code is available at member-operator/pkg/webhook/validatingwebhook/validate_spacebindingrequest.go
    - name: users.spacebindingrequests.webhook.sandbox
      admissionReviewVersions:
        - v1
      clientConfig:
        caBundle: ${CA_BUNDLE}
        service:
          name: member-operator-webhook
          namespace: ${NAMESPACE}
          path: "/validate-spacebindingrequests"
          port: 443
      matchPolicy: Equivalent
      rules:
        - operations: ["CREATE", "UPDATE"]
          apiGroups: ["toolchain.dev.openshift.com"]
          apiVersions: ["v1alpha1"]
          resources: ["spacebindingrequests"]
          scope: "Namespaced"
      sideEffects: None
      timeoutSeconds: 5
      reinvocationPolicy: Never
      failurePolicy: Fail
      namespaceSelector:
        matchLabels:
          toolchain.dev.openshift.com/provider: codeready-toolchain
parameters:
- name: NAMESPACE
  value: 'toolchain-member-operator'
- name: IMAGE
  required: true
- name: CA_BUNDLE
  required: true